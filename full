<html><script type="text/javascript" class="__REQUESTLY__SCRIPT">(function(namespace) {
  window[namespace] = window[namespace] || {};
  window[namespace].responseRules = {};

  let open = XMLHttpRequest.prototype.open;
  XMLHttpRequest.prototype.open = function(method) {
    this.addEventListener('readystatechange', function() {
      if (this.readyState === 4 && window[namespace].responseRules.hasOwnProperty(this.responseURL)) {
        const responseRule = window[namespace].responseRules[this.responseURL];
        const {response, id} = responseRule;
        const responseType = this.responseType;
        let customResponse;

        customResponse = response.type === 'code' ? responseRule.evaluator({
            method,
            url: this.responseURL,
            requestHeaders: this.requestHeaders,
            requestData: this.requestData,
            responseType: this.responseType,
            response: this.response
          }) : response.value;

        Object.defineProperty(this, 'response', {
          get: function () {
            if (response.type === 'static' && responseType === 'json') {
              return JSON.parse(customResponse);
            }
            return customResponse;
          }
        });

        if (responseType === '' || responseType === 'text') {
          Object.defineProperty(this, 'responseText', {
            get: function () {
              return customResponse;
            }
          });
        }

        window.postMessage({
          from: 'requestly',
          type: 'response_rule_applied',
          id
        }, window.location.href);
      }
    }, false);
    open.apply(this, arguments);
  };

  let send = XMLHttpRequest.prototype.send;
  XMLHttpRequest.prototype.send = function(data) {
    this.requestData = data;
    send.apply(this, arguments);
  };

  let setRequestHeader = XMLHttpRequest.prototype.setRequestHeader;
  XMLHttpRequest.prototype.setRequestHeader = function(header, value) {
    this.requestHeaders = this.requestHeaders || {};
    this.requestHeaders[header] = value;
    setRequestHeader.apply(this, arguments);
  }
})('__REQUESTLY__')</script><head><style class="darkreader darkreader--fallback" media="screen"></style><style class="darkreader darkreader--text" media="screen"></style><style class="darkreader darkreader--invert" media="screen">.jfk-bubble, embed[type="application/pdf"] {
    filter: invert(100%) hue-rotate(180deg) contrast(90%) !important;
}</style><style class="darkreader darkreader--inline" media="screen">[data-darkreader-inline-bgcolor] {
  background-color: var(--darkreader-inline-bgcolor) !important;
}
[data-darkreader-inline-bgimage] {
  background-image: var(--darkreader-inline-bgimage) !important;
}
[data-darkreader-inline-border] {
  border-color: var(--darkreader-inline-border) !important;
}
[data-darkreader-inline-border-bottom] {
  border-bottom-color: var(--darkreader-inline-border-bottom) !important;
}
[data-darkreader-inline-border-left] {
  border-left-color: var(--darkreader-inline-border-left) !important;
}
[data-darkreader-inline-border-right] {
  border-right-color: var(--darkreader-inline-border-right) !important;
}
[data-darkreader-inline-border-top] {
  border-top-color: var(--darkreader-inline-border-top) !important;
}
[data-darkreader-inline-boxshadow] {
  box-shadow: var(--darkreader-inline-boxshadow) !important;
}
[data-darkreader-inline-color] {
  color: var(--darkreader-inline-color) !important;
}
[data-darkreader-inline-fill] {
  fill: var(--darkreader-inline-fill) !important;
}
[data-darkreader-inline-stroke] {
  stroke: var(--darkreader-inline-stroke) !important;
}
[data-darkreader-inline-outline] {
  outline-color: var(--darkreader-inline-outline) !important;
}</style><style class="darkreader darkreader--user-agent" media="screen">html {
    background-color: #181a1b !important;
}
html, body, input, textarea, select, button {
    background-color: #181a1b;
}
html, body, input, textarea, select, button {
    border-color: #575757;
    color: #e8e6e3;
}
a {
    color: #3391ff;
}
table {
    border-color: #4c4c4c;
}
::placeholder {
    color: #bab5ab;
}
input:-webkit-autofill,
textarea:-webkit-autofill,
select:-webkit-autofill {
    background-color: #545b00 !important;
    color: #e8e6e3 !important;
}
::selection {
    background-color: #005ccc !important;
    color: #ffffff !important;
}
::-moz-selection {
    background-color: #005ccc !important;
    color: #ffffff !important;
}</style><script>document.title='Video Editor',flashvars={"apiserver":"/","storePath":"https://rryan22.github.io/GoAnimate/Assets/store/3a981f5cb2739137/<store>","isEmbed":1,"ctc":"go","ut":30,"bs":"default","appCode":"go","page":"","siteId":"go","lid":13,"isLogin":"Y","retut":1,"clientThemePath":"https://rryan22.github.io/GoAnimate/Assets/static/ad44370a650793d9/<client_theme>","themeId":"business","tlang":"en_US","presaveId":"m-3007","goteam_draft_only":1,"isWide":1,"nextUrl":"/html/list.html"}</script><title>Video Editor</title><style class="darkreader darkreader--override" media="screen">.vimvixen-hint {
    background-color: #7b5300 !important;
    border-color: #d8b013 !important;
    color: #f3e8c8 !important;
}
::placeholder {
    opacity: 0.5 !important;
}</style></head><body style="margin:0px"><object id="obj" data="https://rryan22.github.io/GoAnimate/Assets/animation/414827163ad4eb60/go_full.swf" type="application/x-shockwave-flash" width="100%" height="100%"><param name="flashvars" value="apiserver=%2F&amp;storePath=https%3A%2F%2Frryan22.github.io%2FGoAnimate%2FAssets%2Fstore%2F3a981f5cb2739137%2F%3Cstore%3E&amp;isEmbed=1&amp;ctc=go&amp;ut=30&amp;bs=default&amp;appCode=go&amp;page=&amp;siteId=go&amp;lid=13&amp;isLogin=Y&amp;retut=1&amp;clientThemePath=https%3A%2F%2Frryan22.github.io%2FGoAnimate%2FAssets%2Fstatic%2Fad44370a650793d9%2F%3Cclient_theme%3E&amp;themeId=business&amp;tlang=en_US&amp;presaveId=m-3007&amp;goteam_draft_only=1&amp;isWide=1&amp;nextUrl=%2Fhtml%2Flist.html"> <param name="allowScriptAccess" value="always"></object><iframe style="display:none" name="dummy"></iframe><form style="display:none" id="uploadbanner" enctype="multipart/form-data" method="post" action="/upload_asset" target="dummy" onchanged="(this.files[0]!=undefined)&amp;&amp;sub.click()"><input id="fileupload" name="import" type="file"><input type="submit" value="submit" id="submit"></form><script>interactiveTutorial={neverDisplay:function(){return true}};function studioLoaded(arg){console.log(arg)}function initPreviewPlayer(xml){confirm('Before proceeding, please make sure all your changes have been saved.')&&window.open('player?movieId='+flashvars.presaveId,'MsgWindow','width=1280,height=720,left='+(screen.width/2-640)+',top='+(screen.height/2-360))};function exitStudio(){window.location='/html/list.html'}const fu=document.getElementById('fileupload'),sub=document.getElementById('submit');function showImporter(){fu.click()};</script></body><script src="chrome-extension://cafckninonjkogajnihihlnnimmkndgf/js/inject.js"></script></html>
